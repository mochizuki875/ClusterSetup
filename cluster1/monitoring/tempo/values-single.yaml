# -- Define the amount of instances
replicas: 1

tempo:
  # repository: grafana/tempo
  # tag: 2.0.1

  resources: {}
  #  requests:
  #    cpu: 1000m
  #    memory: 4Gi
  #  limits:
  #    cpu: 2000m
  #    memory: 6Gi

  memBallastSizeMbs: 10240

  metricsGenerator:
    # -- If true, enables Tempo's metrics generator (https://grafana.com/docs/tempo/next/metrics-generator/)
    enabled: false
    remoteWriteUrl: "http://prometheus.monitoring:9090/api/v1/write"

  # Tempo server configuration
  # Refers to https://grafana.com/docs/tempo/latest/configuration/#server
  server:
    # -- HTTP server listen port
    http_listen_port: 3100

  # this configuration will listen on all ports and protocols that tempo is capable of.
  # the receives all come from the OpenTelemetry collector.  more configuration information can
  # be found there: https://github.com/open-telemetry/opentelemetry-collector/tree/master/receiver
  receivers:
    otlp:
      protocols:
        grpc:
          endpoint: "0.0.0.0:4317"
        http:
          endpoint: "0.0.0.0:4318"

serviceMonitor:
  enabled: true
  interval: "5s"
  additionalLabels: 
    app.kubernetes.io/instance: tempo
  annotations: {}
  # scrapeTimeout: 10s

persistence:
  enabled: true
  storageClassName: openebs-hostpath
  accessModes:
    - ReadWriteOnce
  size: 10Gi


# -- Node labels for pod assignment. See: https://kubernetes.io/docs/user-guide/node-selection/
nodeSelector: 
  dedicated: monitoring

# -- Tolerations for pod assignment. See: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations:
- key: "dedicated"
  value: "monitoring"
  operator: "Equal"
  effect: "NoSchedule"

